import{_ as c,X as l,Y as d,Z as e,a1 as n,$ as a,a0 as t,a3 as r,C as o}from"./framework-a4aa538b.js";const p={},u=e("h1",{id:"docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#docker","aria-hidden":"true"},"#"),n(" Docker")],-1),m={href:"https://github.com/openGemini/openGemini",target:"_blank",rel:"noopener noreferrer"},h=e("h2",{id:"experience-with-docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#experience-with-docker","aria-hidden":"true"},"#"),n(" Experience with Docker")],-1),k={href:"https://www.docker.com/products/docker-desktop/",target:"_blank",rel:"noopener noreferrer"},g=r(`<li><p>Use the latest openGemini container image:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> opengemini opengeminidb/opengemini-server:latest
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Or specify a version of the container image:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-d</span> <span class="token parameter variable">--name</span> opengemini opengeminidb/opengemini-server:v1.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>Connect to openGemini cli:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> opengemini ts-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2),b=e("p",null,"Basic operations",-1),_=r(`<li><p>Stop/Delete container</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> stop opengemini
<span class="token function">docker</span> <span class="token function">rm</span> opengemini
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li>`,1),v=e("p",null,"For more usage, please refer to:",-1),f={href:"https://hub.docker.com/r/opengeminidb/opengemini-server",target:"_blank",rel:"noopener noreferrer"};function x(w,D){const s=o("RouterLink"),i=o("ExternalLinkIcon");return l(),d("div",null,[u,e("p",null,[n("This section first introduces how to quickly experience openGemini through Docker, and then explains how to use openGemini for writing and querying in a Docker environment. If you are not familiar with Docker, you can use the "),a(s,{to:"/guide/quick_start/get_started.html"},{default:t(()=>[n("manual installation")]),_:1}),n(" method to experience it quickly. If you are interested in contributing code to openGemini or are interested in its internal technical implementation, you can download the source code from the "),e("a",m,[n("openGemini GitHub"),a(i)]),n(" homepage for building and installation.")]),h,e("ol",null,[e("li",null,[e("p",null,[n("Install the "),e("a",k,[n("Docker"),a(i)]),n(" environment")])]),g,e("li",null,[b,e("p",null,[n("You can refer to the "),a(s,{to:"/guide/quick_start/get_started.html#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C"},{default:t(()=>[n("basic operations in the manual installation section")]),_:1})])]),_,e("li",null,[v,e("p",null,[e("a",f,[n("Docker Hub Website"),a(i)])])])])])}const y=c(p,[["render",x],["__file","docker.html.vue"]]);export{y as default};
